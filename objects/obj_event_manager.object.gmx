<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Game over
game_over = false;
finished = false;

//Variables
fadeIn = true;
alpha = 1;
fading_speed = 0.05;
    //For final checks
previous_hostility = 0;
next_hostility = 0;
enemies_defeated = 0;
experience_obtained = 0;

//Spammeo enemigos
script_execute(scr_enemy_spam);

//Spammeo jugadores
//Datos
//Positions
spam_position = obj_player_spawn_explore;
//spam_positionX = room_width/2;
//spam_positionY = room_height - 150;
posX[0] = 0;
posX[1] = 50;
posX[2] = -50;
posX[3] = 0;
posY[0] = 50;
posY[1] = 0;
posY[2] = 0;
posY[3] = -50;

//Spawm
    //De momento un poco guarro
    //Habrá que revisarlo
for(i = 0; i &lt; global.num_players; i++){
    //Asign each instanced player his number
    if(global.player[i, 0] != 0){
        player[i] = instance_create(spam_position.x + posX[i], spam_position.y + posY[i],
                                    obj_player);
        player[i].player_num = i;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Fade in y out
if (fadeIn == true)
{
    if (alpha &gt; 0){
        alpha -= fading_speed;
    }
    else{
        alpha = 0;
    }
}
else if (fadeIn == false) {
    if(alpha &lt; 1){
        alpha += fading_speed;
    }
    else{//Aquí nos movemos entre un panel y otro
        alpha = 1;
        instance_deactivate_all(true);
        //La comprobación para salir la hacemos ahora aparte
    }
}

//De momento simplón
    //Por muerte de enemigos
/*if(!instance_exists(obj_enemy2) &amp;&amp; fadeIn == true){     //Ahora con enemigo 2
    //Check if the hostility level has gone lower
    previous_hostilty = global.hex[global.hex_to_use, 3];
    previous_hostilty = round(previous_hostilty/20);
    next_hostility = global.hex[global.hex_to_use, 3] - force_deployed;
    next_hostility = round(next_hostility/20);
    //Check if there is active an exterminate mission
    if(global.mission == 2 &amp;&amp; global.mission_progress &lt; global.mission_requirement){
        if(next_hostility &lt; previous_hostility)
            global.mission_progress ++;
    }
    //Reduce the hostility of the place
    //En guarro
    global.hex[global.hex_to_use, 3] -= force_deployed;
    //Restore the fallen players
    for(i = 0; i &lt; global.num_players; i++){
        //Tengo que revisar de una vez este control
        //if(global.player[i, 0] &gt; 0)
        global.player[i, 3] = max(global.player[i, 3], 1);
    }
    //And give the expereince
    global.experience += force_deployed;
    //And go to the map
    fadeIn = false;
    //room_goto(room_map);
}*/
//Control de salida del mapa (por los jugadores
leaving_players = 0;
for(i = 0; i &lt; instance_number(obj_player); i++){
    player_to_check = instance_find(obj_player, i);
    if(player_to_check.quiting == 1)
        leaving_players ++;
}
//Yeah, check that there are players alive to leave the place. You moron
if(leaving_players == instance_number(obj_player) &amp;&amp; 
    fadeIn == true &amp;&amp; instance_number(obj_player) &gt; 0){
    fadeIn = false;
    finished = true;
}

//Controlar también que se mueran los jugadores
if(instance_number(obj_player) == 0 &amp;&amp; game_over == false &amp;&amp; finished == false){
    game_over = true;
    //Día y generación
    global.days_lapsed = 0;
    global.generation ++;
    //Posición del grupo
        //Se retocará más adelante
    global.lastX = global.hex[0, 0];
    global.lastY = global.hex[0, 1];
    //Resetear seleccion de heroe y jugador
    global.num_players = 0;
    for(i = 0; i &lt; global.num_players; i++){
        //global.player[i, 0] = 0;
        global.player[i, 1] = 0;
    }
    //Resetear nivel y experiencia
    global.level = 1;
    global.experience = 0;
    
    //Luego pongo el resto
    
    //And start the fade
    fadeIn = false;
}
//Button to quit the event if finished
    //De momento muy anidado, igual lo subo arriba
if(gamepad_button_check_released(0, gp_face1) || keyboard_check_released(ord('E'))){
    if(alpha == 1){
        if(finished == true)
            room_goto(room_map);
        else if(game_over == true)
            room_goto(room_tabern);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stuff to draw during the fades
draw_set_colour(c_black);
draw_set_alpha(alpha);
draw_rectangle(0,0,room_width, room_height, false);

//Text parameters
draw_set_color(c_white);
draw_set_valign(fa_center);
draw_set_halign(fa_center);

//Si se mueren
if(game_over == true){
    draw_text(600, 300, "BUT THE HEROES NEVER RETURNED");
    draw_text(600, 350, "Press Action to start the next generation");
}

//Si derrotan al enemigo
if(finished == true){
    draw_text(600, 300, "Experience: " + string(experience_obtained));
    if(next_hostility &lt; previous_hostility)
        draw_text(600, 350, "Hostility reduced");
    draw_text(600, 400, "Press Action to continue");
}

//Que la transparencia del texto vaya con la del fade
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
