<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Frist of all...
randomize();

//Mission finishers
game_over = false;
finished = false;

//Variables
fadeIn = true;
alpha = 1;
fading_speed = 0.05;
    //Mission ones
mission_completion = 0;
mission_requisite = 0;  //Luego lo cambiamos en los case

//Spammeo jugadores
//Datos
//Positions
spam_position = obj_player_spam_tutorial;
posX[0] = 0;
posX[1] = 50;
posX[2] = -50;
posX[3] = 0;
posY[0] = 50;
posY[1] = 0;
posY[2] = 0;
posY[3] = -50;

//Enemies and other stuff
    //Dependeding on the tutorial stage
switch(global.tutorial_stage){
    //First mission, pelea a casco porro
    case 1:
        //First, the melee goatnies
            //De momento aquí en guarro
        for(i = 0; i &lt; 20; i++){
            //Position, upper half
            randomX = irandom_range(200, room_width - 200);
            randomY = irandom_range(100, room_height / 2);
            enemy = instance_create(randomX, randomY, obj_enemy);
            script_execute(scr_pnj_assignment, "Goatnie", enemy);
        }
        //After, the melee allies
        for(i = 0; i &lt; 8 - global.num_players; i++){
            //Position, lower half
            randomX = irandom_range(200, room_width - 200);
            randomY = irandom_range(room_height / 2, room_height - 100);
            ally = instance_create(randomX, randomY, obj_ally);
            script_execute(scr_pnj_assignment, "Soldier", ally);
        }
        //And ranged allies
        for(i = 0; i &lt; 8 - global.num_players; i++){
            //Position, lower half
            randomX = irandom_range(200, room_width - 200);
            randomY = irandom_range(room_height / 2, room_height - 100);
            ally = instance_create(randomX, randomY, obj_ally);
            script_execute(scr_pnj_assignment, "Bow Soldier", ally);
        }
        //And put them in alarm
        //obj_pnj.general_alert = true;
        //And the mission requisite
        mission_requisite = 100 * global.num_players;
    break;
    //Second mission, gather some supplies
    case 2:
        //We will spam a few unalarmed goatnies
        for(i = 0; i &lt; 5; i++){
            //Position, upper half
            randomX = irandom_range(200, room_width - 200);
            randomY = irandom_range(100, room_height / 2);
            enemy = instance_create(randomX, randomY, obj_enemy);
            script_execute(scr_pnj_assignment, "Goatnie", enemy);
        }
        //And supplies to get
        for(i = 0; i &lt; 4 + global.num_players; i++){
            //Position, upper half
            randomX = irandom_range(300, room_width - 300);
            randomY = irandom_range(200, room_height - 200);
            harvestable = instance_create(randomX, randomY, obj_harvestable);
        }
        //And put them unalarmed
            //habrá que ver que falla aqui
        obj_pnj.general_alert = false;
        //And the mission requisite
        mission_requisite = 4 + global.num_players;
    break;
}

//Player spawn
    //De momento un poco guarro
    //Habrá que revisarlo
for(i = 0; i &lt; global.num_players; i++){
    //Asign each instanced player his number
    //if(global.player[i, 0] != 0){
        player[i] = instance_create(spam_position.x + posX[i], spam_position.y + posY[i],
                                    obj_player);
        player[i].player_num = i;
    //}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Fade in y out
if (fadeIn == true)
{
    if (alpha &gt; 0){
        alpha -= fading_speed;
    }
    else{
        alpha = 0;
    }
}
else if (fadeIn == false) {
    if(alpha &lt; 1){
        alpha += fading_speed;
    }
    else{//Aquí nos movemos entre un panel y otro
        alpha = 1;
        instance_deactivate_all(true);
        //La comprobación para salir la hacemos ahora aparte
    }
}

//Victory condition, and ohter checks
if(finished == false &amp;&amp; game_over == false){
    //Depending on the tutorial stage
    switch(global.tutorial_stage){
        //Primera misión, matar x enemigos
        case 1:
            //Mantenemos el flujo de enemigos
                //De momento solo melee
            if(instance_number(obj_enemy) &lt; 20){
                    //Position, upper half
                randomX = irandom_range(200, room_width - 200);
                enemy = instance_create(randomX, 100, obj_enemy);
                script_execute(scr_pnj_assignment, "Goatnie", enemy);
                enemy.general_alert = true;
            }
            //Y de aliados
                //Aquí también solo melee de momento
            if(instance_number(obj_ally) &lt; 10){
                    //Position, lower half
                randomX = irandom_range(200, room_width - 200);
                ally = instance_create(randomX, room_height - 100, obj_ally);
                script_execute(scr_pnj_assignment, "Soldier", ally);
                ally.general_alert = true;
            }
            //When mission is accomplished
            if(mission_completion &gt;= mission_requisite){
                finished = true;
                fadeIn = false;
            }
        break;
        //Second mission, harvest some supplies
        case 2:
            if(obj_enemy.general_alert == true &amp;&amp; instance_number(obj_enemy) &lt; 10 + (global.num_players * 4)){
                    //Position, upper half
                randomX = irandom_range(200, room_width - 200);
                enemy = instance_create(randomX, 100, obj_enemy);
                script_execute(scr_pnj_assignment, "Goatnie", enemy);
                enemy.general_alert = true;
            }
            //When mission is accomplished
            if(mission_completion &gt;= mission_requisite &amp;&amp; !instance_exists(obj_exit)){
                //We take the one´s out of the tutotiral position as reference
                exit_zone = instance_create(1376, 1504, obj_exit);
                exit_zone.image_xscale = 5;
                exit_zone.image_yscale = 2;
                //exit_zone.visible = true;
            }
            //Quit to complete
            leaving_players = 0;
            for(i = 0; i &lt; instance_number(obj_player); i++){
                player_to_check = instance_find(obj_player, i);
                if(player_to_check.quiting == 1)
                    leaving_players ++;
            }
            if(instance_exists(obj_exit)){
                //Yeah, check that there are players alive to leave the place. You moron
                if(leaving_players == instance_number(obj_player) &amp;&amp; 
                    fadeIn == true &amp;&amp; instance_number(obj_player) &gt; 0){
                    fadeIn = false;
                    finished = true;
                }
            }
        break;
    }
}
//Completion overflow control
mission_completion = min(mission_completion, mission_requisite);

//Controlar también que se mueran los jugadores
if(instance_number(obj_player) == 0 &amp;&amp; game_over == false &amp;&amp; finished == false){
    game_over = true;    
    //And start the fade
    fadeIn = false;
}

//Button to quit the event if finished
    //De momento muy anidado, igual lo subo arriba
if(gamepad_button_check_released(0, gp_face1) || keyboard_check_released(ord('E'))){
    if(alpha == 1){
        //Avanzamos en el tuto si ganamos
        if(finished == true)
            global.tutorial_stage ++;
        //Y si o si vamos de nuevo a la selección
        room_goto(room_tutorial_selection);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stuff to draw during the fades
draw_set_colour(c_black);
draw_set_alpha(alpha);
draw_rectangle(0,0,room_width, room_height, false);

//Text parameters
draw_set_color(c_white);
draw_set_valign(fa_center);
draw_set_halign(fa_center);


//Si se mueren
if(game_over == true){
    draw_text(600, 300, "WE HAVE TO TRY HARDER");
    draw_text(600, 400, "Press Action to return");
}

//Si derrotan al enemigo
if(finished == true){
    draw_text(600, 300, "SUCCESS");
    draw_text(600, 400, "Press Action to continue");
}

//Que la transparencia del texto vaya con la del fade
draw_set_alpha(1);

//Para la mision
switch(global.tutorial_stage){
    //Primera matar x enemigos
    case 1:
        draw_text(600, 50, "Draw back the enemy: " + string(mission_completion) + "/" +
                    string(mission_requisite));
    break;
    //Recolectar cosas
    case 2:
        if(mission_completion &lt; mission_requisite){
            draw_text(600, 50, "Gather supplies" + string(mission_completion) + "/" +
                    string(mission_requisite));
            draw_text(600, 80, "They have set guards, better to not attack them");
        }
        else{
            draw_text(600, 50, "Evacuate by the south exit");
        }
    break;
}

//Stuff to check
draw_text(1300, 10, instance_number(obj_harvestable));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
