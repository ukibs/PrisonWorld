<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
life = 20;
defense = 1;
attack = 4;
movement_speed = 1;

//
type = 1;

//
status_locked = false;

//For some abilities
last_attack_done = 0;
last_attack_received = 0;
    //Melee and distance attack
attack_to_use = obj_melee_attack;
    //Charge
charge = false;
charge_direction = 0;

//Behaviour (array of possible actions)
    //This requires a correct order to work well
    //Default behaviour for the enemies
behaviour[0] = "Melee Attack";
behaviour[1] = "Aproach";
    //For testing
last_action = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Alarm for unlocking
status_locked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Mira hacia el prota más cercano
if(instance_exists(obj_player)){
    objective = instance_nearest(x, y, obj_player);
    direction = point_direction(x, y, objective.x, objective.y);
}

//Check behaviour
if(life &gt; 0 &amp;&amp; status_locked == false &amp;&amp; instance_exists(obj_player)){
    script_execute(scr_enemy_behaviour);
}
//Stun control
if(status_locked == true){
    if(direction &lt;= 180)
        sprite_index = back_idle;
    else
        sprite_index = front_idle;
    image_index = 0;
}

//Keep them into the room
    //De momento un poco de cualquier manera
x = clamp(x, 100, room_width - 100);
y = clamp(y, 100, room_height - 100);
//Muerte
if(life &lt;= 0 &amp;&amp; sprite_index != back_death &amp;&amp; sprite_index != front_death){
    if(direction &lt;= 180){
        sprite_index = back_death;
    }
    else{
        sprite_index = front_death;
    }
    image_index = 0;
}
//Adjust depth
depth = room_height - y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//When charguing
if(charge == true){
    if(last_attack_done != other.last_attack_received){
        other.last_attack_received = last_attack_done;
        final_damage = 5 - global.player[other.player_num, 5] - other.bonus_defense;   //Ya le asignaremos el daño desde otro lado
        final_damage = max(final_damage, 0);
        global.player[other.player_num, 3] -= final_damage;
        damage_display = instance_create(other.x, other.y, obj_damage_displayer);
        damage_display.value = -final_damage;
        damage_display.alarm[0] = 10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Muerte definitva
if(sprite_index == front_death ||
    sprite_index == back_death)
    instance_destroy();
//Realziar ataque
if(sprite_index == front_attack ||
    sprite_index == back_attack){ //Habrá que retocarlo
    //If it´s not part of a charge
    if(charge == false){
        attack_instance = instance_create(x, y, attack_to_use);
        attack_instance.direction = direction;
        attack_instance.image_angle = attack_instance.direction;
        attack_instance.damage = attack;
    }
    else{
        //charge = false;
    }
    //Return to normal sprite
    sprite_index = front_idle;
}
//Make outisde the charge control
charge = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
draw_text(10, 10, last_action);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
