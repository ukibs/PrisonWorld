<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
possible_players = 0;
connected_gamepads = 0;

//Maker appear selectors if there are already active players
for(i = 0; i &lt; global.num_players; i++){
    if(global.player[i, 0] &gt; 0){
        selector = instance_create(250 + (i * 100), 150 + (i * 100), obj_character_selector);
        selector.player_num = i;
    }
}

//Text for the missions
mission_text[0] = "Kill enemies";
mission_text[1] = "Get a prisoner";
mission_text[2] = "Gather food";
mission_text[3] = "Defeat their leader";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check constantly the number of gamepads
connected_gamepads = 0;
for(i = 0; i &lt; 4; i++){
    connected_gamepads += gamepad_is_connected(i);
}

//Control para jugador con teclado
possible_players = connected_gamepads + 1;
possible_players = min(possible_players, 4);

//Control de aceptado
for(i = 0; i &lt; connected_gamepads; i++){
    if(gamepad_button_check_released(i, gp_start) &amp;&amp; global.player[i, 0] == 0){
        global.player[i, 0] = 1;
        selector = instance_create(250 + (i * 100), 150 + (i * 100), obj_character_selector);
        selector.player_num = i;
        global.num_players ++;
    }
}
//Con teclado
if(keyboard_check_released(vk_enter) &amp;&amp; possible_players &gt; connected_gamepads
    &amp;&amp; global.player[possible_players - 1, 0] == 0){
     global.player[possible_players - 1, 0] = 2;
     selector = instance_create(250 + (i * 100), 150 + (i*100), obj_character_selector);
     selector.player_num = connected_gamepads;
     global.num_players ++;
}
     
// In case of disconected controller
    //Fallaría en el caso de consiguieran desconectar más de un mando en el mismo frame
global.player[possible_players, 0] = 0;
global.player[possible_players, 1] = 0;
global.num_players = min(global.num_players, possible_players);

//En feo
    //Aquí hermos que vayan al tuto
    //O que lo salten (eso con un botón)
players_done = 0;
    for(i = 0; i &lt; global.num_players; i++){
        if(global.player[i, 1] &gt; 0)
            players_done ++;
    }
if(gamepad_button_check_released(0, gp_face2) || keyboard_check_released(ord('W'))){
    //Que no deje salir si no han elegido todos personaje
    
    if(players_done == global.num_players &amp;&amp; global.num_players &gt; 0)
        room_goto(room_settlement);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Text parameters
draw_set_color(c_white);
draw_set_valign(fa_center);
draw_set_halign(fa_center);

//Mission text
    //Luego lo ponemos bonito
draw_text(room_width/2, 50, mission_text[0]);

//Mostramos por pantalla
for(i = 0; i &lt; possible_players; i++){
    draw_text(75, i * 40 + 10, "Player " + string(i+1));
    if(global.player[i, 0] == 0){
        if(i == connected_gamepads) //Control para jugador de tclado
            draw_text(75, i * 40 + 30, "Press Enter");
        else
            draw_text(75, i * 40 + 30, "Press Start");
        
    }
    else if(global.player[i, 1] == 0)
        draw_text(75, i * 40 + 30, "Choose character");
    else{ //En guarro
        switch(global.player[i, 1]){
            case 1:
                draw_text(75, i * 40 + 30, "Warrior");
            break;
            case 2:
                draw_text(75, i * 40 + 30, "Ranger");
            break;
            case 3:
                draw_text(75, i * 40 + 30, "Monk");
            break;
            case 4:
                draw_text(75, i * 40 + 30, "Witch");
            break;
        }
    }
}

//To quit
draw_text(1200, 700, "B/ESC GO AHEAD");

//Checking stuff
draw_text(30, 700, global.num_players);
draw_text(30, 720, players_done);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
