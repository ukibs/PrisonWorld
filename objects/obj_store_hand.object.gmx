<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_marker_hand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get controls
key_up = gamepad_button_check(0, gp_padu) || keyboard_check(vk_up);
key_down = gamepad_button_check(0, gp_padd) || keyboard_check(vk_down);
key_left = gamepad_button_check(0, gp_padl) || keyboard_check(vk_left);
key_right = gamepad_button_check(0, gp_padr) || keyboard_check(vk_right);

gamepad_set_axis_deadzone(0, 0.2);
v_axis = gamepad_axis_value(0, gp_axislv);
h_axis = gamepad_axis_value(0, gp_axislh);
action_button = gamepad_button_check_released(0, gp_face1) || keyboard_check_released(ord('E'));
return_button = gamepad_button_check_released(0, gp_face2) || keyboard_check_released(ord('W'));

//Move it
//Joystick
y += v_axis * 20;
x += h_axis * 20;
//Keys
y += (-key_up + key_down) * 20;
x += (-key_left + key_right) * 20;

//Return to the map
if(return_button){
    room_goto(room_settlement);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sell_button">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Let´s buy it
if(action_button){
    //Guarro de momento
    for(i = 0; i &lt; array_length_1d(global.harvestable); i++){
        //De momento toda la mierda vale lo mismo, ya lo cambiaremos
        global.currency += global.harvestable[i] * 10;
        global.harvestable[i] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_rations">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Let´s buy it
if(action_button){
    //Guarro de momento
    if(global.currency &gt;= 10 &amp;&amp; global.inventory[0] &lt; 5){
        global.currency -= 10;
        global.inventory[0] ++;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Title
draw_text(room_width/2, 50, "GOODS STORE");

//Draw the button to quit
draw_text(1300, 600, "B EXIT");

//Draw the actual currency
draw_text(1300, 50, "GOLD: " + string(global.currency));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
