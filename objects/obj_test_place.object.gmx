<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test_place</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
positionX = 0;
positionY = 0;
marked = false;
/*Terrain type
        0 - Settlement
        1 - Plains
        2 - Forest
        3 - Swamp
*/
//We assign it from the manager or other
terrain = 0;
hostility = 0;
hex_id = 0;
//Alarm for stuff that has to be checked one step before the create
alarm_set(0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stuff that has to be checked one step before the create
player_group = instance_find(obj_adventurer_group, 0);
map_marker = instance_find(obj_marker_hand, 0);
//Terrain sprite
switch(terrain){
    case 0:
        sprite_index = spr_settlement_hex;
    break;
    case 1:
        sprite_index = spr_plains_hex;
    break;
    case 2:
        sprite_index = spr_forest_hex;
    break;
    case 3:
        sprite_index = spr_swamp_hex;
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check for the existance of the player group and the marker
/*if(!instance_exists(player_group))
    player_group = instance_find(obj_adventurer_group, 0);
else if(!instance_exists(map_marker))
    map_marker = instance_find(obj_marker_hand, 0);
else{*/
//Check if in the path between marker and group
if(collision_line(player_group.x, player_group.y, 
                            map_marker.x, map_marker.y, 
                            id, false, false))
    marked = true;
else
    marked = false;
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
draw_self();
//
if(marked == true)
    draw_sprite(spr_tile_marker_green, 0, x, y);
//
if(obj_marker_hand.show_button){
    if(hostility &gt; 80)
        draw_sprite(spr_tile_highlight_red, 0, x, y);
    else if(hostility &gt; 60)
        draw_sprite(spr_tile_highlight_orange, 0, x, y);
    else if(hostility &gt; 40)
        draw_sprite(spr_tile_highlight_yellow, 0, x, y);
    else if(hostility &gt; 20)
        draw_sprite(spr_tile_highlight_green, 0, x, y);
    else
        draw_sprite(spr_tile_highlight_blue, 0, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
